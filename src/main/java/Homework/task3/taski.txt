Техническое задание:
Система Управления Библиотекой

- Enum
    Genre
        Поля: FICTION, NON_FICTION, SCIENCE, FANTASY, HISTORY, BIOGRAPHY
    BookStatus
        Поля: AVAILABLE, BORROWED, RESERVED, UNDER_REPAIR, LOST

- Абстрактный класс:
    LibraryItem (Элемент Библиотеки)
        Поля:
            String title (название)
            String author (автор)
            Genre genre (жанр)

- Интерфейсы:
    Borrowable (Заимствуемый)
        Методы:
            void borrowItem(User user)
            void returnItem(User user)
            boolean isAvailable()

    Searchable (Поисковый)
        Методы:
            List<LibraryItem> findByTitle(String title)
            List<LibraryItem> findByAuthor(String author)
            List<LibraryItem> findByGenre(Genre genre)

    Maintainable (Обслуживаемый)
        Методы:
            void repairItem()
            void updateItemCondition(ItemCondition condition)
            ItemCondition checkCondition()

- Классы:
    Book (Книга) Реализует: LibraryItem, Borrowable, Maintainable
        Поля:
            BookStatus status
            LocalDate publishDate
            int pageCount

    Magazine (Журнал) Реализует: LibraryItem
        Поля:
            int issueNumber
            LocalDate releaseDate
            boolean isMonthly

    User (Пользователь) Реализует: Searchable
        Поля:
            String name
            String id
            List<LibraryItem> borrowedItems

    Librarian (Библиотекарь) Реализует: Maintainable
        Поля:
            String name
            String employeeId
            List<LibraryItem> managedItems

    LibraryCatalogue (Каталог Библиотеки) Реализует: Searchable
        Поля:
            List<Book> books
            List<Magazine> magazines

    Класс для обработки списков:
    CollectionProcessor (Обработчик Коллекций)
        Методы:
            void printAllItems(List<LibraryItem> items)
            void listItemsByGenre(List<LibraryItem> items, Genre genre)
            void sortByTitle(List<LibraryItem> items)
            void filterByAuthor(List<LibraryItem> items, String author)
            void countItemsByStatus(List<LibraryItem> items, BookStatus status)
            void updateStatus(List<LibraryItem> items, BookStatus oldStatus, BookStatus newStatus)
            void listAvailableItems(List<LibraryItem> items)
            void findOldestItem(List<LibraryItem> items)
            void groupItemsByAuthor(List<LibraryItem> items)
            void listItemsForRepair(List<LibraryItem> items)
            void displayItemCount(List<LibraryItem> items)
            void listBorrowedItemsByUser(List<LibraryItem> items, User user)
            void removeLostItems(List<LibraryItem> items)
            void addItemToList(List<LibraryItem> items, LibraryItem item)
            void removeItemFromList(List<LibraryItem> items, LibraryItem item)
            void sortItemsByPublicationDate(List<LibraryItem> items)
            void findMostPopularGenre(List<LibraryItem> items)
            void calculateAveragePageCount(List<Book> books)
            void listMonthlyMagazines(List<Magazine> magazines)
            void listItemsByCondition(List<LibraryItem> items, ItemCondition condition)